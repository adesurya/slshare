<%- include('../layout', { 
    body: `
    <div class="auth-container">
      <div class="auth-header">
        <h1>Reset Password</h1>
        <p>Create a new password for your account</p>
      </div>
  
      <% if (locals.errors && errors.length > 0) { %>
        <div class="error-message">
          <% errors.forEach(error => { %>
            <p><%= error.msg %></p>
          <% }); %>
        </div>
      <% } %>
  
      <form class="auth-form" action="/auth/reset-password/${token}" method="POST">
        <input type="hidden" name="email" value="${email}">
        
        <div class="form-group">
          <label for="password">New Password</label>
          <input type="password" id="password" name="password" required>
          <small>Password must be at least 6 characters</small>
        </div>
  
        <div class="form-group">
          <label for="confirm_password">Confirm New Password</label>
          <input type="password" id="confirm_password" name="confirm_password" required>
        </div>
  
        <div class="password-requirements">
          <h3>Password Requirements:</h3>
          <ul>
            <li class="req-length">At least 6 characters</li>
            <li class="req-match">Passwords match</li>
          </ul>
        </div>
  
        <button type="submit" class="auth-button">Reset Password</button>
      </form>
  
      <div class="auth-alternative">
        <p>Back to <a href="/auth/login">Login</a></p>
      </div>
    </div>
    `,
    title,
    currentPage: 'profile',
    showSearchBar: false,
    scripts: `
    <style>
      .password-requirements {
        margin: 20px 0;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 4px;
      }
      
      .password-requirements h3 {
        font-size: 14px;
        margin-bottom: 10px;
      }
      
      .password-requirements ul {
        padding-left: 20px;
      }
      
      .password-requirements li {
        margin-bottom: 5px;
        color: #666;
      }
      
      .password-requirements li.valid {
        color: #28a745;
      }
      
      .password-requirements li.valid::before {
        content: "✓ ";
        color: #28a745;
      }
      
      .password-requirements li.invalid {
        color: #dc3545;
      }
      
      .password-requirements li.invalid::before {
        content: "✗ ";
        color: #dc3545;
      }
    </style>
    
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const passwordInput = document.getElementById('password');
        const confirmInput = document.getElementById('confirm_password');
        const reqLength = document.querySelector('.req-length');
        const reqMatch = document.querySelector('.req-match');
        
        function validatePassword() {
          // Check length
          if (passwordInput.value.length >= 6) {
            reqLength.classList.add('valid');
            reqLength.classList.remove('invalid');
          } else {
            reqLength.classList.add('invalid');
            reqLength.classList.remove('valid');
          }
          
          // Check match
          if (passwordInput.value && confirmInput.value) {
            if (passwordInput.value === confirmInput.value) {
              reqMatch.classList.add('valid');
              reqMatch.classList.remove('invalid');
            } else {
              reqMatch.classList.add('invalid');
              reqMatch.classList.remove('valid');
            }
          } else {
            reqMatch.classList.remove('valid');
            reqMatch.classList.remove('invalid');
          }
        }
        
        passwordInput.addEventListener('input', validatePassword);
        confirmInput.addEventListener('input', validatePassword);
      });
    </script>
    `
  }) %>